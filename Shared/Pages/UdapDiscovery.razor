@page "/udapDiscovery"


<ErrorBoundary @ref="ErrorBoundary">
  <ChildContent>
      <MudGrid Class="mt-4">
          <MudItem sm="4" xs="12">
              <MudText Typo="Typo.h4" >Udap Metadata</MudText>
              <MudStack Wrap="Wrap.Wrap" Row="true">
                  <MudButton Class="mt-3"
                             Color="Color.Primary"
                             ButtonType="ButtonType.Button"
                             Variant="Variant.Filled"
                             OnClick="GetMetadata">Query</MudButton>

                  <MudButton Class="mt-3"
                             Color="Color.Primary"
                             ButtonType="ButtonType.Button"
                             Variant="Variant.Filled"
                             OnClick="RemoveBaseUrl"
                             Style="white-space: nowrap;">Remove Base Url</MudButton>
              </MudStack>
          </MudItem>
          <MudSpacer/>
          <MudItem sm="8" xs="12">
              <MudGrid Spacing="2" Justify="Justify.FlexEnd" Class="bottom:0;right:0">
                  <UdapAnchorCertificate/>
              </MudGrid>
          </MudItem>
          <MudItem xs="12">
              <MudGrid Spacing="2" Justify="Justify.FlexStart">
                  <MudItem xs="8">
                      <MudAutocomplete T="string"
                                       Label="Enter BaseUrl"
                                       HelperText=@($"UDAP Metadata URL: {RequestUrl.GetWellKnownUdap(BaseUrl, Community)}")
                                                                                  @bind-Value="BaseUrl"
                                       @bind-Text="BaseUrl"
                                       SearchFunc="@GetMetadata"
                                       ResetValueOnEmptyText="true"
                                       DebounceInterval="10000" />
                  </MudItem>
                  <MudItem xs="4">
	                  <MudTextField
		                  @bind-Value="Community" 
		                  Label="Community" 
		                  Variant="Variant.Text"
		                  AdornmentIcon="@Icons.Material.Outlined.Input"
		                  Adornment="@KnownCommunityAdornment"
		                  OnAdornmentClick="SelectKnownCommunities"
		                  ></MudTextField>
                  </MudItem>
              </MudGrid>
              @if (AppState.MetadataVerificationModel != null && AppState.MetadataVerificationModel.Untrusted.Any())
              {
                  <MudAlert Severity="Severity.Error">
                      @foreach (string note in AppState.MetadataVerificationModel.Untrusted)
                      {
                          <li>@note</li>
                      }
                  </MudAlert>
              }
              @if (AppState.MetadataVerificationModel != null && AppState.MetadataVerificationModel.TokenErrors.Any())
              {
	              <MudAlert Severity="Severity.Error">
		              @foreach (string note in AppState.MetadataVerificationModel.TokenErrors)
		              {
			              <li>@note</li>
		              }
	              </MudAlert>
              }
              @if (AppState.MetadataVerificationModel != null && AppState.MetadataVerificationModel.Problems.Any())
              {
	              <MudAlert Severity="Severity.Warning">
		              @foreach (string note in AppState.MetadataVerificationModel.Problems)
		              {
			              <li>@note</li>
		              }
	              </MudAlert>
              }
          </MudItem>
          <MudGrid Spacing="1" Class="mt-8">
	          <MudItem sm="6" xs="12">
		          <MudPaper Class="udap-input" Elevation="3">
			          @if (!_isLoading && ModelSizeInBytes.HasValue && !string.IsNullOrEmpty(Result))
			          {
				          <MudAlert Severity="Severity.Info" Variant="Variant.Text" Dense="true" ContentAlignment="HorizontalAlignment.Right">
					          <span><b>Size:</b> @ModelSizeInBytesFormatted bytes</span>
				          </MudAlert>
                      
				          <div style="position: relative;">
					          <MudIconButton Icon="@Icons.Material.TwoTone.ContentCopy"
					                         Color="Color.Surface"
					                         OnClick="CopyResultToClipboard"
					                         Disabled="@string.IsNullOrEmpty(Result)"
					                         Title="Copy to clipboard"
					                         style="position: absolute; right: 0.5rem; top: 0.5rem; z-index: 1;" />
					          <pre style="padding-right: 2.5rem;">@Result</pre>
				          </div>
			          }
			          else
			          {
				          <pre style="padding-right: 2.5rem;">@Result</pre>
			          }
		          </MudPaper>
		  
			          @if (AppState.SmartMetadataModel != null)
			          {
				          <MudPaper>
					          <MudAlert Severity="Severity.Info" Variant="Variant.Text" Dense="true">
						          <span><b>Note:</b> Missing Udap scopes. Scopes found in .well-known/smart-configuration</span>
					          </MudAlert>
					          <pre style="padding-right: 2.5rem;">@AppState.SmartMetadataModel?.scopes_supported.AsJson()</pre>
				          </MudPaper>
						}
		          
	          </MudItem>
              <MudItem sm="6" xs="12">
                  <MudPaper Class="udap-analyzed" Elevation="3">
                      <MudText Align="Align.Right" Color="Color.Tertiary">Discovery | Metadata | Signed | Communities</MudText>
                      <MudTabs Elevation="2" Rounded="true" ApplyEffectsToContainer="true" PanelClass="pa-2" KeepPanelsAlive="true">
                          <MudTabPanel Text="Signed Software Statement">
                              <SignedJwtViewer Title="<b>Decoded software_statement::</b>" SignedSoftwareStatement="@AppState.MetadataVerificationModel?.UdapServerMetaData?.SignedMetadata" />
                          </MudTabPanel>
                          <MudTabPanel Text="Certificates">
                                <CertificatePKIViewer @ref="_certificateViewer"  JwtHeaderWithx5c="@GetJwtHeader()" />
                          </MudTabPanel>
                      </MudTabs>
                  </MudPaper>
              </MudItem>
          </MudGrid>
      </MudGrid>

  </ChildContent>
  <ErrorContent Context="ex">
    <pre class="blazor-error-boundary">
            @ex.Message
      </pre>
  </ErrorContent>
</ErrorBoundary>